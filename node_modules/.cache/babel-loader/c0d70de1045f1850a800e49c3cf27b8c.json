{"ast":null,"code":"import React from 'react';\nimport { invariant } from 'ts-invariant';\nimport { getApolloContext } from \"./ApolloContext.js\";\nexport var ApolloProvider = function ApolloProvider(_a) {\n  var client = _a.client,\n    children = _a.children;\n  var ApolloContext = getApolloContext();\n  return React.createElement(ApolloContext.Consumer, null, function (context) {\n    if (context === void 0) {\n      context = {};\n    }\n    if (client && context.client !== client) {\n      context = Object.assign({}, context, {\n        client: client\n      });\n    }\n    process.env.NODE_ENV === \"production\" ? invariant(context.client, 28) : invariant(context.client, 'ApolloProvider was not passed a client instance. Make ' + 'sure you pass in your client via the \"client\" prop.');\n    return React.createElement(ApolloContext.Provider, {\n      value: context\n    }, children);\n  });\n};","map":{"version":3,"sources":["../../../src/react/context/ApolloProvider.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO;AACzB,SAAS,SAAS,QAAQ,cAAc;AAGxC,SAAS,gBAAgB,QAAQ,oBAAkB;AAOnD,OAAO,IAAM,cAAc,GAAuC,SAArD,cAAc,CAAwC,EAGlE,EAAA;MAFC,MAAM,GAAA,EAAA,CAAA,MAAA;IACN,QAAQ,GAAA,EAAA,CAAA,QAAA;EAER,IAAM,aAAa,GAAG,gBAAgB,EAAE;EACxC,OAAO,KACL,CAAA,aAAA,CAAA,aAAC,CAAa,QAAC,EAAQ,IAAA,EAAA,UACpB,OAAC,EAAiB;IAAjB,IAAA,OAAA,KAAA,KAAA,CAAA,EAAA;MAAA,OAAA,GAAA,CAAA,CAAiB;IAAA;IACjB,IAAI,MAAM,IAAI,OAAO,CAAC,MAAM,KAAK,MAAM,EAAE;MACvC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,CAAA,CAAE,EAAE,OAAO,EAAE;QAAE,MAAM,EAAA;MAAA,CAAE,CAAC;IACjD;IAED,OAAA,CAAA,GACE,CAAA,QAAQ,KAAM,YACd,GAAA,SAAA,CAAA,OAAA,CAAA,MAAA,EAAA,EAAA,CAAA,GAAA,SAAA,CAAwD,OAAA,CAAA,MAAA,EAAA,wDAAA,GACtD,qDAAqD,CACxD;IAED,OACE,KAAA,CAAA,aAAA,CAAC,aAAa,CAAC,QAAQ,EAAA;MAAC,KAAK,EAAE;IAAO,CAAA,EACnC,QAAQ,CACc;EAE7B,CAAC,CACsB;AAE7B,CAAC","sourcesContent":["import React from 'react';\nimport { invariant } from 'ts-invariant';\n\nimport { ApolloClient } from '../../core';\nimport { getApolloContext } from './ApolloContext';\n\nexport interface ApolloProviderProps<TCache> {\n  client: ApolloClient<TCache>;\n  children: React.ReactNode | React.ReactNode[] | null;\n}\n\nexport const ApolloProvider: React.FC<ApolloProviderProps<any>> = ({\n  client,\n  children\n}) => {\n  const ApolloContext = getApolloContext();\n  return (\n    <ApolloContext.Consumer>\n      {(context: any = {}) => {\n        if (client && context.client !== client) {\n          context = Object.assign({}, context, { client });\n        }\n\n        invariant(\n          context.client,\n          'ApolloProvider was not passed a client instance. Make ' +\n            'sure you pass in your client via the \"client\" prop.'\n        );\n\n        return (\n          <ApolloContext.Provider value={context}>\n            {children}\n          </ApolloContext.Provider>\n        );\n      }}\n    </ApolloContext.Consumer>\n  );\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}