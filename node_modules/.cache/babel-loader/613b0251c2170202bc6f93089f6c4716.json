{"ast":null,"code":"import { throwServerError } from \"../utils/index.js\";\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function parseAndCheckHttpResponse(operations) {\n  return function (response) {\n    return response.text().then(function (bodyText) {\n      try {\n        return JSON.parse(bodyText);\n      } catch (err) {\n        var parseError = err;\n        parseError.name = 'ServerParseError';\n        parseError.response = response;\n        parseError.statusCode = response.status;\n        parseError.bodyText = bodyText;\n        throw parseError;\n      }\n    }).then(function (result) {\n      if (response.status >= 300) {\n        throwServerError(response, result, \"Response not successful: Received status code \" + response.status);\n      }\n      if (!Array.isArray(result) && !hasOwnProperty.call(result, 'data') && !hasOwnProperty.call(result, 'errors')) {\n        throwServerError(response, result, \"Server response was missing for query '\" + (Array.isArray(operations) ? operations.map(function (op) {\n          return op.operationName;\n        }) : operations.operationName) + \"'.\");\n      }\n      return result;\n    });\n  };\n}","map":{"version":3,"sources":["../../../src/link/http/parseAndCheckHttpResponse.ts"],"names":[],"mappings":"AACA,SAAS,gBAAgB,QAAQ,mBAAW;AAEpC,IAAA,cAAc,GAAK,MAAM,CAAC,SAAS,CAAA,cAArB;AAQtB,OAAM,SAAU,yBAAyB,CACvC,UAAmC,EAAA;EAEnC,OAAO,UAAC,QAAkB,EAAA;IAAK,OAAA,QAAQ,CACpC,IAAI,EAAE,CACN,IAAI,CAAC,UAAA,QAAQ,EAAA;MACZ,IAAI;QACF,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;OAC5B,CAAC,OAAO,GAAG,EAAE;QACZ,IAAM,UAAU,GAAG,GAAuB;QAC1C,UAAU,CAAC,IAAI,GAAG,kBAAkB;QACpC,UAAU,CAAC,QAAQ,GAAG,QAAQ;QAC9B,UAAU,CAAC,UAAU,GAAG,QAAQ,CAAC,MAAM;QACvC,UAAU,CAAC,QAAQ,GAAG,QAAQ;QAC9B,MAAM,UAAU;MACjB;IACH,CAAC,CAAC,CACD,IAAI,CAAC,UAAC,MAAW,EAAA;MAChB,IAAI,QAAQ,CAAC,MAAM,IAAI,GAAG,EAAE;QAE1B,gBAAgB,CACd,QAAQ,EACR,MAAM,EACN,gDAAA,GAAiD,QAAQ,CAAC,MAAQ,CACnE;MACF;MAED,IACE,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IACtB,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,IACpC,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,EACtC;QAEA,gBAAgB,CACd,QAAQ,EACR,MAAM,EACN,yCAAA,IACE,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,GACrB,UAAU,CAAC,GAAG,CAAC,UAAA,EAAE,EAAA;UAAI,OAAA,EAAE,CAAC,aAAa;QAAhB,CAAgB,CAAC,GACtC,UAAU,CAAC,aAAa,CAAA,GAAA,IAC1B,CACL;MACF;MACD,OAAO,MAAM;IACf,CAAC,CAAC;EAzC2B,CAyC3B;AACN","sourcesContent":["import { Operation } from '../core';\nimport { throwServerError } from '../utils';\n\nconst { hasOwnProperty } = Object.prototype;\n\nexport type ServerParseError = Error & {\n  response: Response;\n  statusCode: number;\n  bodyText: string;\n};\n\nexport function parseAndCheckHttpResponse(\n  operations: Operation | Operation[],\n) {\n  return (response: Response) => response\n    .text()\n    .then(bodyText => {\n      try {\n        return JSON.parse(bodyText);\n      } catch (err) {\n        const parseError = err as ServerParseError;\n        parseError.name = 'ServerParseError';\n        parseError.response = response;\n        parseError.statusCode = response.status;\n        parseError.bodyText = bodyText;\n        throw parseError;\n      }\n    })\n    .then((result: any) => {\n      if (response.status >= 300) {\n        // Network error\n        throwServerError(\n          response,\n          result,\n          `Response not successful: Received status code ${response.status}`,\n        );\n      }\n\n      if (\n        !Array.isArray(result) &&\n        !hasOwnProperty.call(result, 'data') &&\n        !hasOwnProperty.call(result, 'errors')\n      ) {\n        // Data error\n        throwServerError(\n          response,\n          result,\n          `Server response was missing for query '${\n            Array.isArray(operations)\n              ? operations.map(op => op.operationName)\n              : operations.operationName\n          }'.`,\n        );\n      }\n      return result;\n    });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}