{"ast":null,"code":"import { InvariantError } from 'ts-invariant';\nexport function validateOperation(operation) {\n  var OPERATION_FIELDS = ['query', 'operationName', 'variables', 'extensions', 'context'];\n  for (var _i = 0, _a = Object.keys(operation); _i < _a.length; _i++) {\n    var key = _a[_i];\n    if (OPERATION_FIELDS.indexOf(key) < 0) {\n      throw process.env.NODE_ENV === \"production\" ? new InvariantError(26) : new InvariantError(\"illegal argument: \" + key);\n    }\n  }\n  return operation;\n}","map":{"version":3,"sources":["../../../src/link/utils/validateOperation.ts"],"names":[],"mappings":"AAAA,SAAS,cAAc,QAAQ,cAAc;AAI7C,OAAM,SAAU,iBAAiB,CAAC,SAAyB,EAAA;EACzD,IAAM,gBAAgB,GAAG,CACvB,OAAO,EACP,eAAe,EACf,WAAW,EACX,YAAY,EACZ,SAAS,CACV;EACD,KAAgB,IAAA,EAAA,GAAA,CAAsB,EAAtB,EAAA,GAAA,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,EAAtB,EAAA,GAAA,EAAA,CAAA,MAAsB,EAAtB,EAAA,EAAsB,EAAE;IAAnC,IAAI,GAAG,GAAA,EAAA,CAAA,EAAA,CAAA;IACV,IAAI,gBAAgB,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;MACrC,MAAM,OAAI,CAAA,GAAA,CAAA,QAAe,KAAA,YAAA,GAAA,IAAqB,cAAO,CAAA,EAAA,CAAA,GAAA,IAAA,cAAA,CAAA,oBAAA,GAAA,GAAA,CAAA;IACtD;EACF;EAED,OAAO,SAAS;AAClB","sourcesContent":["import { InvariantError } from 'ts-invariant';\n\nimport { GraphQLRequest } from '../core';\n\nexport function validateOperation(operation: GraphQLRequest): GraphQLRequest {\n  const OPERATION_FIELDS = [\n    'query',\n    'operationName',\n    'variables',\n    'extensions',\n    'context',\n  ];\n  for (let key of Object.keys(operation)) {\n    if (OPERATION_FIELDS.indexOf(key) < 0) {\n      throw new InvariantError(`illegal argument: ${key}`);\n    }\n  }\n\n  return operation;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}